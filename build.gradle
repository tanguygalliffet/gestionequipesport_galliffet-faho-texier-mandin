plugins {
    id 'org.springframework.boot' version '3.1.0' // Use the appropriate version of Spring Boot
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

group = 'com.example.web_galliffetmandintexierfaho'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17' // Ensure this matches your Java version

repositories {
    mavenCentral()
}



dependencies {
    // Spring Boot Starter for Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Boot Starter Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2 Database (for testing purposes; you can replace this with another DB if needed)
    runtimeOnly 'com.h2database:h2'

    // Lombok (optional, helps reduce boilerplate code for models)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Boot DevTools (optional, for development hot reloading)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Spring Boot Starter Test (for unit and integration tests)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation files('libs/ojdbc11.jar') // Make sure this path matches your project structure


    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0' // Ensure Jakarta persistence is included
    implementation 'com.oracle.database.jdbc:ojdbc11:21.7.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.webjars:AdminLTE:3.2.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'




}

tasks.named('test') {
    useJUnitPlatform()
}
